Process
There's a lot of math in this one. The problem is asking us to identify
Carmichael numbers - non-primes that satisfy the equation a^n mod n = a for n
from 2 to n - 1. It should be apparent that for large n, we won't be able to
store a^n in any data type (outside of BigInteger, but this is too slow). We
have to use a fast modular exponentiation technique for speed and to stay
within our 64 bit integer limit.
There's a good explanation of what this is here:
http://goo.gl/Q82TQ5
Note that all primes will pass the Fermat test (Fermat's little theorem).
Therefore we need to use the sieve of Eratosthenes to generate the primes up to
65000 and eliminate them as Carmichael numbers. You should preprocess the
Carmichael numbers under 65000 - otherwise you will time out.
