UVA 256
Quirksome squares

Process
This problem can be done easily by first generating the first 10000 squares and
so and evaluating the condition (a + b) ^ 2 == ab. The tricky part may be
finding the values a and b. I originally was looking for some kind of string
manipulation solution, but i realized that given the number of digits, using
modulo division and division, we can determine the left and right numbers. The
left side of a 8 digit number is given by 12345678 / 10 ^ (8 / 2) and the right
side is given by 12345678 % (8 / 2). The same is true of 6, 4, and 2 digits by
changing the value of the power to # digits / 2. Given this, the problem
devolves to checking whether the left and right half summed and squared equals
the square in question. The other tricky part was outputting the leading zeroes.
The method I used was cin with a preset width and fill with '0'.

Input
2
4
6
8

Output
00
01
81
0000
0001
2025
3025
9801
000000
000001
088209
494209
998001
00000000
00000001
04941729
07441984
24502500
25502500
52881984
60481729
99980001
